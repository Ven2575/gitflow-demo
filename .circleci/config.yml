version: 2.1
#commands: # a reusable command with parameters
#  jobstatus:
#parameters:
#  output:
#    default: false
#    type: boolean
#    steps:
#      - run: echo "it is << parameters.output >>"
        
jobs:
  my-job:
    machine:
       image: ubuntu-2004:202101-01
    steps:
      - run: echo "test API"
      #- run:
       #   name: API call to deploy job
       #   command: |
       #       curl --request GET \
       #        --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$CIRCLE_BUILD_NUM \
       #        --header 'authorization: Basic REPLACE_BASIC_AUTH' | grep "running"  
              # OUTPUT="$(curl --request GET \
              #  --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$CIRCLE_BUILD_NUM \
              #  --header 'authorization: Basic REPLACE_BASIC_AUTH' | grep "running")"
                
               #if [ -n "${OUTPUT}" ]; then status: true && echo $status; else status: false && echo $status; fi 
 #     - jobstatus: 
 #         output: true
 #     - run:
 #          name: Defining parameter value
 #          command: |
 #             curl --request POST \
 #               --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/pipeline \
 #               --header 'Circle-Token: 4ba4c16b93e6e3999938690200ec4d2c5d52ee8e' \
 #               --header 'content-type: application/json' \
 #               --data '{"parameters": {"output": true}}'
             
 #             echo "parameter value is << pipeline.parameters.output >>" 
             # curl -u ${CIRCLECI_TOKEN}: -X POST --header "Content-Type: application/json" -d '{
             #     "parameters": {
             #      "output": true
             #     }
             # }' https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/pipeline
  #    - run: echo "parameter value is << pipeline.parameters.output >>"
  status: # defines a parameterized job
    description: A job that does very little other than demonstrate what a parameterized job looks like
    parameters:
      job_status:
        description: "To whom shall we say hello?"
        default: false
        type: boolean 
    machine:
       image: ubuntu-2004:202101-01
    steps:
      - run:
          name: API call to deploy job
          command: |
              curl --request GET \
               --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$CIRCLE_PREVIOUS_BUILD_NUM \
               --header 'authorization: Basic REPLACE_BASIC_AUTH' | grep "success"
      - run:
           name: parameter value fixing
           command: |
              curl --request POST \
                --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/pipeline \
                --header 'Circle-Token: 4ba4c16b93e6e3999938690200ec4d2c5d52ee8e' \
                --header 'content-type: application/json' \
                --data '{"parameters": {"job_status": true}}'
      - when:
          condition: << parameters.job_status >>
          steps:
            - run: echo "deployment successful"
      - unless:
          condition: << parameters.job_status >>
          steps:
            - run: echo "deployment fail"
     # - run: echo "Hello << parameters.job_status >>"     
  
  rollback-to-previous:
     description: It'll be enabled only when current deployment fails
     machine: 
        image: ubuntu-2004:202101-01
     steps:
       - when:
          condition: << pipeline.parameters.output >>
          steps:
            - run: echo "deployment successful"
       - unless:
          condition: << pipeline.parameters.output >>
          steps:
            - run: echo "deployment fail"
   
workflows:
  version: 2
  my-workflow:
    jobs:
      - my-job
      - status
       #   requires:
      #      - my-job
      #    job_status: true
     # - rollback-to-previous:
     #      requires:
     #         - status
