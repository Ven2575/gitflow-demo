version: 2.1
commands: # a reusable command with parameters
  greeting:
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run: echo "Hello <<parameters.to>>"

parameters:
   status:
      default: false
      type: boolean
jobs:
  my-job:
    machine:
       image: ubuntu-2004:202101-01
    steps:
      - greeting:
          to: "Ven"
      - run:
          name: API call to deploy job
          command: |
             # curl --request GET \
             #  --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$CIRCLE_BUILD_NUM \
             #  --header 'authorization: Basic REPLACE_BASIC_AUTH' >> apioutput.json
               OUTPUT="$(curl --request GET \
                --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$CIRCLE_BUILD_NUM \
                --header 'authorization: Basic REPLACE_BASIC_AUTH' | grep "running")"
                
               sudo -i if [ -n "${OUTPUT}" ]\; then echo "it is $OUTPUT"\; else echo "it is $OUTPUT"\; fi
      - run:
           name: finding job status
           command: |
              echo '
              #!/bin/bash/
              OUTPUT=$(grep "running" ~/project/apioutput.json)
              if [ -n "${OUTPUT}" ]; then
                     export OUTPUT=true
                     echo "it is $OUTPUT"
                 else
                     export OUTPUT= false
                     echo "it is $OUTPUT"
               fi' >> jobstatus.sh
      - run: 
            name: Finding the job status
            command: |
               sh ~/project/jobstatus.sh
      
  rollback-to-previous:
     description: It'll be enabled only when current deployment fails
     machine: true
     steps:
        - run: 
             name: print out previous step variable value
             command: |
                echo " it is $OUTPUT"
               # echo "Hello << parameters.status >>"
  
  #job-status:
  #  machine:
  #     image: ubuntu-2004:202101-01
  #  steps:
  #    - run: 
  #        name: saving build number in variable
  #        command: |
  #           echo 'export job_id=$CIRCLE_PREVIOUS_BUILD_NUM' >> $BASH_ENV
  #           #echo job_id=$CIRCLE_PREVIOUS_BUILD_NUM
  #    - run:
  #        name: API call to deploy job
  #        command: |
  #           curl --request GET \
  #             --url https://circleci.com/api/v2/project/github/Ven2575/gitflow-demo/job/$job_id \
  #             --header 'authorization: Basic REPLACE_BASIC_AUTH' >> apioutput.json
  #    - run:
  #         name: finding job status
  #         command: |
  #            echo '
  #            #!/bin/bash/
  #            OUTPUT=$(grep "success" ~/project/apioutput.json)
  #            
  #            if [ -n "${OUTPUT}" ]; then
  #                   echo "${OUTPUT}"
  #               else
  #                   echo "Job is failed"
  #             fi' >> jobstatus.sh
  #    - run: 
        
   #         name: Finding the job status
   #         command: |
   #            sh ~/project/jobstatus.sh
               
workflows:
  version: 2
  my-workflow:
    jobs:
      - my-job
      - rollback-to-previous:
           requires:
              - my-job
           #status: $OUTPUT
    #  - rollback-to-previous:
    #       when: << pipeline.parameters.status >>
    #       requires:
    #          - my-job
      
     # - job-status:
     #      requires:
     #         - my-job
  #rollback:
  #   when: << pipeline.parameters.status >>
  #   jobs:
  #     - rollback-to-previous #invokes parametrized job
              
